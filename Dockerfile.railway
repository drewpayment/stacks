# Build with:   docker build -t IMAGE_NAME .
# Run with:     docker run -p 3000:3000 --rm --name IMAGE_NAME IMAGE_NAME
ARG ORIGIN=https://stacks.hoytlabs.app
ARG ENABLE_DRIZZLE_LOGGER
ARG POSTGRES_DB_HOST
ARG POSTGRES_DB_PORT
ARG POSTGRES_DB_USER
ARG POSTGRES_DB_PASSWORD
ARG POSTGRES_DB_NAME
ARG POSTGRES_MAX_CONNECTIONS
ARG TUNNEL_HOST
ARG TUNNEL_USER
ARG TUNNEL_PORT 
ARG TUNNEL_PRIVATE_KEY 
ARG TUNNEL_PRIVATE_KEY_PATH
ARG TUNNEL_DEST_HOST
ARG TUNNEL_DEST_PORT
ARG TUNNEL_LOCAL_PORT
ARG TUNNEL_DEBUG
ARG MYSQL_DB_HOST
ARG MYSQL_DB_PORT
ARG MYSQL_DB_USER
ARG MYSQL_DB_PASSWORD
ARG MYSQL_DB_NAME
ARG MYSQL_USE_SSH
ARG GITHUB_CLIENT_ID
ARG GITHUB_CLIENT_SECRET
ARG GOOGLE_OAUTH_CLIENT_ID
ARG GOOGLE_OAUTH_CLIENT_SECRET
ARG GOOGLE_OAUTH_REDIRECT_URI
ARG RESEND_API_KEY
ARG FROM_EMAIL 
ARG CMP_CLIENT_ID
ARG SUPABASE_URL
ARG SUPABASE_API_KEY
ARG PUBLIC_SUPABASE_KEY
ARG PUBLIC_POSTHOG_KEY
ARG AUTH_INITIALIZE=false
ARG INSTANTDB_ADMIN_TOKEN
ARG PUBLIC_APP_ID

FROM oven/bun:1 AS base
ENV BUILD_MODE=true
ENV ORIGIN=$ORIGIN
ENV ENABLE_DRIZZLE_LOGGER=$ENABLE_DRIZZLE_LOGGER
ENV POSTGRES_DB_HOST=$POSTGRES_DB_HOST
ENV POSTGRES_DB_PORT=$POSTGRES_DB_PORT
ENV POSTGRES_DB_USER=$POSTGRES_DB_USER
ENV POSTGRES_DB_PASSWORD=$POSTGRES_DB_PASSWORD
ENV POSTGRES_DB_NAME=$POSTGRES_DB_NAME
ENV POSTGRES_MAX_CONNECTIONS=$POSTGRES_MAX_CONNECTIONS
ENV TUNNEL_HOST=$TUNNEL_HOST
ENV TUNNEL_USER=$TUNNEL_USER
ENV TUNNEL_PORT =$TUNNEL_PORT 
ENV TUNNEL_PRIVATE_KEY =$TUNNEL_PRIVATE_KEY 
ENV TUNNEL_PRIVATE_KEY_PATH=$TUNNEL_PRIVATE_KEY_PATH
ENV TUNNEL_DEST_HOST=$TUNNEL_DEST_HOST
ENV TUNNEL_DEST_PORT=$TUNNEL_DEST_PORT
ENV TUNNEL_LOCAL_PORT=$TUNNEL_LOCAL_PORT
ENV TUNNEL_DEBUG=$TUNNEL_DEBUG
ENV MYSQL_DB_HOST=$MYSQL_DB_HOST
ENV MYSQL_DB_PORT=$MYSQL_DB_PORT
ENV MYSQL_DB_USER=$MYSQL_DB_USER
ENV MYSQL_DB_PASSWORD=$MYSQL_DB_PASSWORD
ENV MYSQL_DB_NAME=$MYSQL_DB_NAME
ENV MYSQL_USE_SSH=$MYSQL_USE_SSH
ENV GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
ENV GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
ENV GOOGLE_OAUTH_CLIENT_ID=$GOOGLE_OAUTH_CLIENT_ID
ENV GOOGLE_OAUTH_CLIENT_SECRET=$GOOGLE_OAUTH_CLIENT_SECRET
ENV GOOGLE_OAUTH_REDIRECT_URI=$GOOGLE_OAUTH_REDIRECT_URI
ENV RESEND_API_KEY=$RESEND_API_KEY
ENV FROM_EMAIL =$FROM_EMAIL 
ENV CMP_CLIENT_ID=$CMP_CLIENT_ID
ENV SUPABASE_URL=$SUPABASE_URL
ENV SUPABASE_API_KEY=$SUPABASE_API_KEY
ENV PUBLIC_SUPABASE_KEY=$PUBLIC_SUPABASE_KEY
ENV PUBLIC_POSTHOG_KEY=$PUBLIC_POSTHOG_KEY
ENV AUTH_INITIALIZE=$AUTH_INITIALIZE
ENV INSTANTDB_ADMIN_TOKEN=$INSTANTDB_ADMIN_TOKEN
ENV PUBLIC_APP_ID=$PUBLIC_APP_ID

FROM base AS prod-deps

WORKDIR /app 

COPY package.json bun.lock* ./
RUN bun install --frozen-lockfile --production

FROM base AS build

WORKDIR /app

# Install necessary build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy package files first for better caching
COPY package.json bun.lock* ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy the rest of the application
COPY . .

# Set Node options for increased memory
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Build it! 
RUN bun run build

FROM base

WORKDIR /app

# Copy necessary files from builder
COPY --from=prod-deps /app/node_modules ./node_modules
COPY --from=build /app/build ./build
COPY --from=build /app/package.json ./
# Copy migration scripts so they can be run at startup if needed
RUN mkdir -p /app/src/lib/drizzle
COPY --from=build /app/src/lib/drizzle /app/src/lib/drizzle
COPY --from=build /app/src/lib/drizzle/postgres/drizzle.config.ts ./drizzle.config.ts

EXPOSE 3000
# CMD ["bun", "run", "railway:start"]
CMD ["bun", "run", "./build/index.js"]